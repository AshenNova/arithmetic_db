<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href="/images/favicon.ico?v=1.1">
    <title>Upload</title>

    <!-- bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4bw+/aepP/YC94hEpVNVgiZdgIC5+VKNBQNGCHeKRQN+PtmoHDEXuppvnDJzQIu9" crossorigin="anonymous">

    <!-- pdf-lib link -->
    <script src="https://unpkg.com/pdf-lib"></script>

    <!-- downloadjs link -->
    <script type="text/javascript" src="https://unpkg.com/downloadjs@1.4.7/download.js"></script>

    <!-- font awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

</head>
<style>
    .hidden{
        display: none;
    }
    body {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .nav {
      padding: 0.5rem 1rem;
      background: white;
      border-bottom: 1px solid rgb(245, 244, 244);
      position: sticky;
      top: 0;
      z-index: 1;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
        font-size: 2rem;
        color: rgb(182, 34, 34);
    }

    #convertBtn, #upload-msg {
        border: none;
        outline: none;
        background: rgb(89, 150, 248);
        color: white;
        border-radius: 0.2rem;
        padding: 0.5rem 1rem;
        font-size: 1.2rem;
        margin-right: 0.5rem;
        cursor: pointer;
    }

    #convertBtn {
        display: none;
    }

    /* input page */

    .input-page {
        /* display: none; */
        display: flex;
        justify-content: center;
        height: 90%;
        align-items: center;
        min-height: 90vh;
    }

    .add-more-files {
        width: 50vw;
        border-radius: 0.3rem;
        padding: 3rem;
        text-align: center;
        background: rgba(230, 230, 250, 0.13);
        box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    }

    .inp-container{
        cursor: pointer;
        position: relative;
        box-shadow: rgba(0, 0, 0, 0.35) 0px 1px 0px, rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(124, 124, 145, 0.1) 0px 16px 48px;
        height: 15rem;
        width: 15rem;
        border-radius: 50%;
        border: 1px dashed rgb(195, 193, 193);
        margin: auto;
        background: rgba(154, 127, 228, 0.068);
        border-width: 0.15rem;

    }

    #upload-file{
        opacity: 0;
        display: block;
        height: 16rem;
        width: 100%;
        position: absolute;
        cursor: pointer;
    }

    .img-icon{
        color: rgba(128, 144, 238, 0.596);
    }

    #custom-file {
        color: rgb(96, 102, 155);
        position: relative;
        top: 0.5rem;
        padding: 0.5rem 0.8rem;
        font-size: 1.1rem;
        font-weight: 600;
    }

    span{
        font-size: 1.45rem;
    }

    .drop {
        margin-top: 3rem;
        font-size: 1rem;
        color: rgb(108, 107, 175);
    }

    /* pdf page */

    .pdf-page{
        display: none;
        min-height: 90vh;
        width: 100%;
        overflow: hidden;
    }

    .create-pdf {
        position: relative;
        padding: 1rem;
        margin: auto;
    }

    .file-item {
        padding: 0 1rem;
        background: none;
        text-align: center;
        position: relative;
        width: 10rem;
        height: 16rem;
        margin: 1rem;
        display: inline-block;
        transition: 0.3s all ease-in-out;
        box-shadow: rgb( 0,0,0, 0.24) 0px 3px 8px;
    }

    .modify button {
        padding: 0.3rem;
        /* font-size: 1rem; */
        color: red;
        border-radius: 50%;
        /* outline: none;
        border: none; */
    }

    .img-container{
        width: 8.5rem;
        margin: auto;
        height: 11rem;
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    #img {
        position: relative;
        max-width: 9rem;
        max-height: 11rem;
    }

    .file-item button {
        margin: 0 0.2rem;
        background: none;
        border: none;
        outline: none;
        font-size: 1.2rem;
        transition: 0.3s all ease-in-out;
        opacity: 0;
        padding: 0.3rem 0.5rem;
    }

    .file-item button:hover {
        background: rgb(224, 248, 251);
    }

    .file-item:hover button{
        opacity: 1;
    }
#img-name{
    margin-top: 1rem;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    width: 8.5rem;
    text-align: center;
    margin: 1 rem auto;
}

.add-more-file {
    padding: 0 1rem;
    background: none;
    text-align: center;
    position: relative;
    margin: 0.5rem;
    display: inline-block;
    transition: 0.3s all ease-in-out;
    width: 10rem;
    height: 16rem;
    vertical-align: top;

}

.inp-cont {
    display: flex;
    flex-direction: column;
    flex-flow: column-reverse;
    border-radius: 50%;
    position: relative;
    text-align: center;
    border: none;
 background: rgb(241,246, 246);
 width: 9rem;
 height: 9rem;
 margin: 3rem auto;
}
#inp{
    opacity: 0;
    display: block;
    width: 9rem;
    height: 9rem;
    border-radius: 50%;
    position: absolute;
}

.create-pdf .add-more-file p{
    position: relative;
    top: -3.5rem
}

#afterUpload {
/* display: flex;
justify-content: center; */
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    margin: auto;
    background: white;
    border: 2px solid black;
    border-radius: 0.2rem;
    align-items: center;         
    width: 600px;
    height: 250px;
    z-index: 9;
    margin: auto;
}
.options{
    padding: 5px;
    text-align: center;
}

#message {
    position: sticky;
    position: -webkit-sticky;
    top: 60px;
    z-index: 2;
    text-align: center;
}

.message-input {
    color: red;
}
</style>
<body>
    <div class="nav">
        <span class="logo">
            <i class="fa fa-file-pdf-o"></i> PDF 
        </span>    
            <div>
                <!-- <form action="/exam/upload/save" method="post"> -->
                <button id="convertBtn" onclick = {embedImages()}>
                    <!-- <button id="convertBtn" type="submit"> -->
                    SAVE AS PDF
                </button>
                 <!-- </FORM> -->
                <button id="upload-msg">
                    UPLOAD FILES
                </button>
            </div>
    </div>

    <!-- message -->
    <div class="container" id="message">
        <h3 class="message-input"><%= message %></h3>
    </div>
    <!-- Input page -->
    <div class="input-page" id="input-page">
        <div class="choose-file">
            <div class="add-more-files">
                <div class="inp-container">
                    <input type="file" id="upload-file" onchange={encodeImageFileAsURL(this)} multiple accept="image/"><h4 class="drop">DRAG & DROP OR </h4>
                    <p><i class="fa fa-file-image-o fa-4x img-icon"></i></p>
                    <label for='upload-file' id="custom-file">CHOOSE FILES</label>
                </div>
            </div>
        </div>
    </div>

    <!-- Pdf page -->
    <div class="pdf-page" id="pdf-page">
        <div class="create-pdf" id="create-pdf">
            <!-- This part is to show the pdf structure and would disappear once javascript files are created -->
            <div class="file-item">
                <div class="modify">
                    <button class="delete-btn">
                       <i class="fa fa-trash">

                       </i>
                    </button>
                </div>
                <div class="img-container">
                    <img src="https://nintendoeverything.com/wp-content/uploads/sites/1/nggallery/super-mario-bros-wonder-character-art/Super_Mario_Bros_art_1.jpg" alt="img" id="img">
                </div>
                <p id="img-name">
                    img-name
                </p>
            </div>
            <div class="add-more-file">
                <div class="inp-cont">
                    <input type="file" id="inp" multiple accept="image/">
                    <p>
                        <i class="fa fa-plus"></i>
                    </p>
                    <label for="inp">Add Files</label>
                </div>
            </div>
        </div>
    </div>

    <!-- Upload file to googledrive -->
    <div class="container m-3">
        <form action="/exam/upload/save" method="POST">
            <div class="form-group m-2">
                <label class="form-label">Name</label>
                <input type="text" class="form-control" name="name" placeholder="2022.p4.sa2.acsj" required>
            </div>

            <div class="form-group m-2">
                <label class="form-label" for="customFile" id="customFileInput">Upload pdf file to drive</label>
                <input type="file" class="form-control" id="customFile" name="imageFile" required multiple/>
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>

    <!-- After upload (Update or New) -->

    <div id="afterUpload" class='hidden'>
        <div class="options">
            <h6>Then what?</h1>
                <form method="get" id="form_query_update">
                    <div class="row mt-3">
                        <div class="col">
                            <label class="form-label">Subject</label>
                            <select class="form-select" name="subject">
                                <option select></option>
                                <% unique.subject.forEach(item => { %>
                                    <option><%= item %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="col">
                            <label class="form-label">Year</label>
                            <select class="form-select" name="year">
                                <option select></option>
                                <% unique.year.forEach(item => { %>
                                    <option><%= item %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="col">
                            <label class="form-label">Level</label>
                            <select class="form-select" name="level">
                                <option select></option>
                                <% unique.level.forEach(item => { %>
                                    <option><%= item %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="col">
                            <label class="form-label">Type</label>
                            <select class="form-select" name="type">
                                <option select></option>
                                <% unique.type.forEach(item => { %>
                                    <option><%= item %></option>
                                <% }) %>
                            </select>
                        </div>
                        <div class="col">
                            <label class="form-label">School</label>
                            <select class="form-select" name="school">
                                <option select></option>
                                <% unique.school.forEach(item => { %>
                                    <option><%= item %></option>
                                <% }) %>
                            </select>
                        </div>
                    </div>
                        <button type="submit" class="btn btn-warning my-3">Update</button>
                 </form>
           
                 <a href="#" id="new-exam"><button class="btn btn-primary">New</button></a>
        </div>
    </div>
</body>

<script>
    let data = []
    let width= 620;
    let height = 800;
    let pdfName;
    let fileName = "";

    const createPDF = document.getElementById("create-pdf");
    encodeImageFileAsURL = element => {
        document.getElementById("input-page").style.display = "none";
        document.getElementById("pdf-page").style.display = "inline-block";

        const length = element.files.length;
        console.log(element)
        console.log(element.files)
        for(let i = 0; i < length; i++){
            let file = element.files[i]
            let pdfname = element.files[0]
            let reader = new FileReader();
            reader.readAsDataURL(file)

            let obj = {
                list: reader,
                fileName: file.name,
                time: new Date().toString() + i
            }
            console.log(obj)

            reader.onloadend = () => {
                data = [...data, obj];
                console.log(`Data: ${JSON.stringify(data)}`)
                pdfName = pdfname.name
            }
        }
        setTimeout(convertToPDF, 1000);
        document.getElementById('upload-file').value = null;
        setTimeout(saveAsPDF, 1000);
    }

    saveAsPDF = () => {
        // console.log(element)
        document.getElementById('upload-msg').style.display = "none";
        document.getElementById('convertBtn').style.display = "inline-block";
       
    }

    //delete item from pdf page
    function handleDelete(e){
             data = data.filter((item) => {
                 console.log(item)
                //KEEPING THE ITEMS THAT IS NOT EQUAL TO THE IMG ID THAT IS CLICKED ON.
                return item.time !== e.currentTarget.id
            })
                if (data.length == 0){
                    location.reload()
                    // console.log(data.length)
                } else {
                    convertToPDF()
                
            }
            
    }

    // initiate file download
    embedImages = async () => {
        const pdfDoc = await PDFLib.PDFDocument.create();
        for( let i = 0; i < data.length; i++){
            const jpgUrl = data[i].list.result;
            const jpgImageBytes = await fetch(jpgUrl).then((res) => {
                return res.arrayBuffer()
            })

            const jpgImage = await pdfDoc.embedJpg(jpgImageBytes);

            //Add a blank page to the document

            const page = pdfDoc.addPage();

            //set page size
            page.setSize(width, height);
            page.drawImage(jpgImage, {
                x: 20,
                y: 50,
                width: page.getWidth()-40,
                height: page.getHeight()-100
            })
        }

        // Save the pdf pages
        const pdfBytes = await pdfDoc.save();

        //download

        download(pdfBytes, pdfName.slice(0, -4), "application/pdf");

        //back to home page after downloading

        setTimeout(backToHomepage, 1000);
    }

    function backToHomepage (){
        location.reload()
    }

    function convertToPDF(){
        createPDF.innerHTML = ""

        data.map((item, i) => {
            const fileItem = document.createElement("div");
            fileItem.setAttribute("class",'file-item');

            const modify = document.createElement("div");
            modify.setAttribute("class",'modify');

            const button2 = document.createElement("button");
            button2.setAttribute("class",'delete-btn');
            button2.setAttribute("id", item.time);

           
            const remove = document.createElement("i")
            remove.setAttribute("class", "fa fa-trash");

            button2.appendChild(remove)
            button2.addEventListener("click", (e) => {
                handleDelete(e);
            })

            modify.appendChild(button2);
            
            //insert
            fileItem.appendChild(modify);

            const imgContainer = document.createElement("div")
            imgContainer.setAttribute("class", "img-container")

            const img = document.createElement("img")
            img.setAttribute("id", "img");
            img.src = item.list.result;
            imgContainer.appendChild(img)
            //insert
            fileItem.appendChild(imgContainer)

            const imgName = document.createElement("p");
            imgName.setAttribute("id", "img-name");
            imgName.innerHTML = item.fileName;

            //insert
            fileItem.appendChild(imgName);

            //fileItem is the child of createPDF
            createPDF.appendChild(fileItem);

            
        })

        const addMoreFile = document.createElement("div")
            addMoreFile.setAttribute("class", "add-more-file")

            const addFile = document.createElement("div");
            addFile.setAttribute('class', "inp-cont");

            const input = document.createElement("input");
            input.setAttribute("id", "inp")
            input.type = "file"
            input.multiple = "true";
            input.onchange = function(){
                encodeImageFileAsURL(this);
            }

            const p = document.createElement("p");
            const inner = document.createElement('i');
            inner.setAttribute("class", "fa fa-plus");
            p.appendChild(inner)

            const label = document.createElement("label");
            label.htmlFor = "inp"
            label.innerHTML = "add Files"
            addFile.appendChild(p)
            addFile.appendChild(label)
            addFile.appendChild(input)

            //addFile is the child of addMoreFile
            addMoreFile.appendChild(addFile);
            createPDF.appendChild(addMoreFile);
    }
        // SUMMIT BRAND NEW REWARD FORM
    const formElem = document.querySelector("form");
    formElem.addEventListener("submit", async (e) => {
    console.log("form submitting");
    e.preventDefault();
    await fetch("/exam/upload/save", {
        method: "POST",
        body: new FormData(formElem),
    })
        .then((response) => {
        if (response.status == 200) {
            // const data = Promise.all([response.json()])
            // console.log(data.toString())
            let data = {}
            Promise.all([response.json()]).then((values)=> {
                //values are returned as an array
                console.log(values[0].driveid)
                data = values[0].driveid
            const afterUpload = document.querySelector("#afterUpload").classList.remove("hidden")
            const formQueryUpdate = document.querySelector("#form_query_update").action = `/exam/queryupdate/${data}`

            document.querySelector("#new-exam").href= `/exam/new/${data}`
            })
           
        } else {
            alert("Sorry! Failed to add file.");
        }
        })
        .catch((error) => {
        console.error(error);
        });
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm" crossorigin="anonymous"></script>
</html>